import os
import sys

from mailing.cli import main

#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –ª–æ–≥–∞–º–∏"""
sys.path.append(".")

def test_real_sending():"""–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏"""
    """–¢–µ—Å—Ç –¥–ª—è real sending."""
print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–ê–õ–¨–ù–û–ô –û–¢–ü–†–ê–í–ö–ò")print("=" * 50)

# –°–æ–∑–¥–∞–¥–∏–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –≤–∞—à–∏–º email –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏test_email = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ")
with open("test_real_recipient.csv","w") as f:f.write(f"email,name,company,
discount\n")f.write(f"{test_email},–¢–µ—Å—Ç–µ—Ä,–†–µ–∞–ª—å–Ω–∞—è –ö–æ–º–ø–∞–Ω–∏—è,30\n")
print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —Å –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–º: {test_email}")

    # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—éprint("\nüìã –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò...")
    argv_check = ["--file","test_real_recipient.csv","--template",
    "test_template_real.html","--check",
    ]

    try:
    main(argv_check)print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    except SystemExit as e:
        if e.code != 0:print("‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            return

    # Dry-run —Ç–µ—Å—Çprint("\nüß™ DRY-RUN –¢–ï–°–¢...")
    argv_dry = ["--file","test_real_recipient.csv","--template",
    "test_template_real.html","--subject","üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–æ–∫ (DRY-RUN)",
    "--dry-run",
    ]

    try:
    main(argv_dry)print("‚úÖ Dry-run —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω")
    except Exception as e:print(f"‚ùå –û—à–∏–±–∫–∞ dry-run: {e}")
        return

    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µprint("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê")print("–≠—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ä–µ–∞–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π email!")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—áapi_key = os.getenv("RESEND_API_KEY", "test_resend_key_for_testing_only")if api_key.startswith("test_") or api_key == "test_resend_key_for_testing_only":print("\nüîë –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π API –∫–ª—é—á")print("–î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–π RESEND_API_KEY")print("–¢–µ–∫—É—â–∏–π –∫–ª—é—á:", api_key)
choice = input("\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å —Ç–µ—Å—Ç–æ–≤—ã–º –∫–ª—é—á–æ–º (–±—É–¥–µ—Ç –æ—à–∏–±–∫–∞)? [y/N]: ")if choice.lower() != "y":print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            return
print(f"\nüöÄ –û–¢–ü–†–ê–í–ö–ê –ù–ê: {test_email}")confirm = input("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É [y/N]: ")
if confirm.lower() == "y":
    argv_real = ["--file","test_real_recipient.csv","--template",
        "test_template_real.html","--subject","üöÄ –†–ï–ê–õ–¨–ù–´–ô —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–æ–∫!",
        "--concurrency","1",# –ú–µ–¥–ª–µ–Ω–Ω–µ–µ, –Ω–æ –Ω–∞–¥–µ–∂–Ω–µ–µ
    ]

        try:print("\nüì§ –û–¢–ü–†–ê–í–õ–Ø–ï–ú...")
        main(argv_real)print("‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É.")
        except Exception as e:print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
    else:print("‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")

if __name__ == "__main__":
    test_real_sending()
