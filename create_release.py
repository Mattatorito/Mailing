from pathlib import Path
import os
import sys

import shutil
import tempfile
import zipfile

#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ä–µ–ª–∏–∑–∞"""



def create_release():"""–°–æ–∑–¥–∞–µ—Ç —Ä–µ–ª–∏–∑–Ω—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–æ–µ–∫—Ç–∞"""
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç create release."""
print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ä–µ–ª–∏–∑–∞ Professional Email Marketing Tool v1.0.0")print("=" * 60)

    # –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    project_dir = Path(__file__).parent

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–ª–∏–∑–∞
    with tempfile.TemporaryDirectory() as temp_dir:release_dir = Path(temp_dir) / "professional-email-marketing-tool-v1.0.0"
        release_dir.mkdir()
print("üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")

        # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ —Ä–µ–ª–∏–∑
        include_files = ["README.md","INSTALL.md","CHANGELOG.md","FEATURES.md","LICENSE",
            "VERSION","requirements.txt","pyproject.toml",".env.example",".gitignore",
            "run_gui.py","minimal_web_gui.py","enhanced_gui_app.py","mailing/","gui/",
            "data_loader/","templating/","validation/","persistence/","stats/","resend/",
            "samples/","tk_gui/",
        ]

        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
        for item in include_files:
            src = project_dir / item
            dst = release_dir / item

            if src.exists():
                if src.is_file():print(f"  üìÑ {item}")
                    shutil.copy2(src, dst)
                elif src.is_dir():print(f"  üìÅ {item}/")
                    shutil.copytree(
                        src,
                        dst,
                        ignore = shutil.ignore_patterns("__pycache__","*.pyc","*.pyo", ".DS_Store"
                        ),
                    )
            else:print(f"  ‚ö†Ô∏è  {item} –Ω–µ –Ω–∞–π–¥–µ–Ω")

        # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤archive_name = project_dir / "professional-email-marketing-tool-v1.0.0.zip"
print(f"\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞: {archive_name.name}")
with zipfile.ZipFile(archive_name,"w", zipfile.ZIP_DEFLATED) as zipf:for file_path in release_dir.rglob("*"):
                if file_path.is_file():
                    arc_name = file_path.relative_to(release_dir.parent)
                    zipf.write(file_path, arc_name)
print(f"‚úÖ –†–µ–ª–∏–∑ —Å–æ–∑–¥–∞–Ω: {archive_name}")print(f"üìä –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: {archive_name.stat().st_size / 1024 / 1024:.1f} MB")
print("\nüéâ –†–µ–ª–∏–∑ –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∂–µ!")print("\nüìã –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ:")print("  ‚Ä¢ –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")print("  ‚Ä¢ Desktop GUI")print("  ‚Ä¢ CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")print("  ‚Ä¢ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")print("  ‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤")print("  ‚Ä¢ –í—Å–µ –º–æ–¥—É–ª–∏ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")

    return archive_name

if __name__ == "__main__":
    try:
        archive_path = create_release()print(f"\n‚úÖ –†–µ–ª–∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {archive_path}")
    except Exception as e:print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞: {e}")
        sys.exit(1)
