from pathlib import Path
import asyncio
import json
import sys

from datetime import datetime

from data_loader.csv_loader import CSVLoader
from mailing.config import settings
from mailing.models import Recipient
from mailing.sender import run_campaign, CampaignController
from persistence.db import get_connection
from templating.engine import TemplateEngine

#!/usr/bin/env python3
"""
–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ email"""
sys.path.append(".")


# –ò–º–ø–æ—Ä—Ç—ã —Å–∏—Å—Ç–µ–º—ã


async def test_full_email_cycle():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("üöÄ –¢–ï–°–¢ –ü–û–õ–ù–û–ì–û –¶–ò–ö–õ–ê –û–¢–ü–†–ê–í–ö–ò EMAIL")
    print("=" * 70)

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
    print(f"   üîë API –∫–ª—é—á: {settings.resend_api_key[:15]}...")
    print(f"   üìß –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {settings.resend_from_email}")
    print(f"   üë§ –ò–º—è: {settings.resend_from_name}")

    # 2. –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
    print(f"\n2Ô∏è‚É£ –ó–ê–ì–†–£–ó–ö–ê –ü–û–õ–£–ß–ê–¢–ï–õ–ï–ô:")
    if not Path("test_recipients_real.csv").exists():
        print("‚ùå –§–∞–π–ª test_recipients_real.csv –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

    loader = CSVLoader()
    recipient_objects = loader.load("test_recipients_real.csv")

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    recipients = []
    for r in recipient_objects:
        recipient_dict = {"email": r.email, "name": r.name}
        recipient_dict.update(r.variables)
        recipients.append(recipient_dict)
    
    print(f"   üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: {len(recipients)}")
    for i, recipient in enumerate(recipients, 1):
        print(f"   {i}. {recipient.get('email','no email')} - {recipient.get('name','no name')}")

    # 3. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —à–∞–±–ª–æ–Ω–∞
    print(f"\n3Ô∏è‚É£ –ü–û–î–ì–û–¢–û–í–ö–ê –®–ê–ë–õ–û–ù–ê:")
    template_path = Path("samples/test_template_real.html")
    if not template_path.exists():
        print("‚ùå –§–∞–π–ª samples/test_template_real.html –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

    engine = TemplateEngine()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    test_recipient = (
        recipients[0]
        if recipients
        else {"email": "test@example.com", "name": "Test User"}
    )

    template_vars = {
        **test_recipient,
        "current_date": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "subject": "–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏",
    }

    try:
        rendered = engine.render("test_template_real.html", template_vars)
        print(f"   ‚úÖ –®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        print(f"   üìÑ –¢–µ–º–∞: {rendered.subject}")
        print(f"   üìè –†–∞–∑–º–µ—Ä HTML: {len(rendered.body_html)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   üìù –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞: {len(rendered.body_text or '')} —Å–∏–º–≤–æ–ª–æ–≤")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ HTML
        print(f"   üëÄ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä HTML (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤):")
        print(f"      {rendered.body_html[:200]}...")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞: {e}")
        return False

    # 4. –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –î–û –æ—Ç–ø—Ä–∞–≤–∫–∏
    print(f"\n4Ô∏è‚É£ –°–û–°–¢–û–Ø–ù–ò–ï –ë–î –î–û –û–¢–ü–†–ê–í–ö–ò:")

    with get_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT COUNT(*) FROM deliveries")
        deliveries_before = cursor.fetchone()[0]
        cursor.execute("SELECT COUNT(*) FROM events")
        events_before = cursor.fetchone()[0]
        print(f"   üìß –î–æ—Å—Ç–∞–≤–æ–∫ –≤ –ë–î: {deliveries_before}")
        print(f"   üéØ –°–æ–±—ã—Ç–∏—è –≤ –ë–î: {events_before}")

    # 5. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–∞–º–ø–∞–Ω–∏–∏
    print(f"\n5Ô∏è‚É£ –ü–û–î–ì–û–¢–û–í–ö–ê –ö–ê–ú–ü–ê–ù–ò–ò:")

    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã Recipient
        print(f"   ‚úÖ –ì–æ—Ç–æ–≤–æ {len(recipient_objects)} –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π")
        print(f"   ‚ö° –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å: {settings.concurrency}")
        print(f"   üîÑ –õ–∏–º–∏—Ç –≤ –º–∏–Ω—É—Ç—É: {settings.rate_limit_per_minute}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫–∞–º–ø–∞–Ω–∏–∏: {e}")
        return False

    # 6. –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (dry-run —Ä–µ–∂–∏–º)
    print(f"\n6Ô∏è‚É£ –°–ò–ú–£–õ–Ø–¶–ò–Ø –û–¢–ü–†–ê–í–ö–ò (DRY-RUN):")

    try:
        # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∞
        test_recipients = recipient_objects[:1]test_email = test_recipients[0].email if test_recipients else "test@example.com"
print(f"   üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞: {test_email}")print(f"   üéØ –¢–µ–º–∞: {template_vars.get('subject', 'Test Subject')}")

        controller = CampaignController()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–∞–º–ø–∞–Ω–∏—é –≤ dry-run —Ä–µ–∂–∏–º–µ
        events_count = 0
        success_count = 0

        async for event in run_campaign(recipients = test_recipients,"
            "template_name="test_template_real.html",
                ""subject = template_vars.get("subject","Test Subject"),
            dry_run = True,  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π dry-run
            concurrency = 1,controller = controller,"
            "):
            events_count += 1print(f"   üìä –°–æ–±—ã—Ç–∏–µ {events_count}: {event.get('type', 'unknown')}")
if event.get("type") == "progress":if event.get("success"):
                    success_count += 1print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞!")print(f"   üÜî Message ID: {event.get('message_id', 'unknown')}")
                else:print(f"   ‚ùå –û—à–∏–±–∫–∞: {event.get('error', 'unknown')}")
elif event.get("type") == "finished":print(f"   üèÅ –ö–∞–º–ø–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                break
print(f"   üìà –ò—Ç–æ–≥–æ —Å–æ–±—ã—Ç–∏–π: {events_count}")print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {success_count}")

    except Exception as e:print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–º—É–ª—è—Ü–∏–∏: {e}")

    # 7. –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ü–û–°–õ–ï —Å–∏–º—É–ª—è—Ü–∏–∏print(f"\n7Ô∏è‚É£ –°–û–°–¢–û–Ø–ù–ò–ï –ë–î –ü–û–°–õ–ï –°–ò–ú–£–õ–Ø–¶–ò–ò:")

    with get_connection() as conn:
        cursor = conn.cursor()
cursor.execute("SELECT COUNT(*) FROM deliveries")
        deliveries_after = cursor.fetchone()[0]
cursor.execute("SELECT COUNT(*) FROM events")
        events_after = cursor.fetchone()[0]
print(f"   üìß –î–æ—Å—Ç–∞–≤–æ–∫ –≤ –ë–î: {deliveries_after} (–±—ã–ª–æ: {deliveries_before})")print(f"   üéØ –°–æ–±—ã—Ç–∏—è –≤ –ë–î: {events_after} (–±—ã–ª–æ: {events_before})")

        if deliveries_after > deliveries_before:
            print(f"   ‚úÖ –ù–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –æ –¥–æ—Å—Ç–∞–≤–∫–µ: {deliveries_after - deliveries_before}"
            )

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å
            cursor.execute("""
                SELECT email, success, provider, created_at, message_id
                FROM deliveries
                ORDER BY id DESC
                LIMIT 1"""
            )
            last_delivery = cursor.fetchone()

            if last_delivery:status = "‚úÖ –£—Å–ø–µ—Ö" if last_delivery[1] else "‚ùå –û—à–∏–±–∫–∞"print(f"   üìÆ –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–æ—Å—Ç–∞–≤–∫–∞: {status}")print(f"      üìß Email: {last_delivery[0]}")print(f"      üåê –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {last_delivery[2]}")print(f"      üïí –í—Ä–µ–º—è: {last_delivery[3]}")print(f"      üÜî Message ID: {last_delivery[4]}")

    # 8. –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µprint(f"\n8Ô∏è‚É£ –ì–û–¢–û–í–ù–û–°–¢–¨ –ö –†–ï–ê–õ–¨–ù–û–ô –û–¢–ü–†–ê–í–ö–ï:")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    if (settings.resend_api_key.startswith("test_")or "example" in settings.resend_api_key
    ):print(f"   ‚ö†Ô∏è  API –∫–ª—é—á –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ —Ç–µ—Å—Ç–æ–≤—ã–π")print(f"   üí° –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω—É–∂–µ–Ω –Ω–∞—Å—Ç–æ—è—â–∏–π –∫–ª—é—á Resend")
    else:print(f"   ‚úÖ API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—èif "example.com" in settings.resend_from_email:print(f"   ‚ö†Ô∏è  Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Ç–µ—Å—Ç–æ–≤—ã–π")print(f"   üí° –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω—É–∂–µ–Ω –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ–º–µ–Ω")
    else:print(f"   ‚úÖ Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
print(f"\nüéØ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")print(f"   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")print(f"   ‚úÖ –ü–æ–ª—É—á–∞—Ç–µ–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã ({len(recipients)})")print(f"   ‚úÖ –®–∞–±–ª–æ–Ω –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")print(f"   ‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")print(f"   ‚úÖ –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")print(f"   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è")
print(f"\nüí° –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò!")print(f"   üìä –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç")print(f"   üóÉÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏")print(f"   ‚ö° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è")

    return True

if __name__ == "__main__":
    try:
        success = asyncio.run(test_full_email_cycle())
        if success:print(f"\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        else:print(f"\n‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ò–õ–û–°–¨ –° –û–®–ò–ë–ö–ê–ú–ò")
    except KeyboardInterrupt:print(f"\n‚èπÔ∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:print(f"\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
