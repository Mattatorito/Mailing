import json
import sys

from datetime import datetime

        from templating.engine import TemplateEngine
from mailing.config import settings
from mailing.limits.daily_quota import DailyQuota
from persistence.db import get_connection
from persistence.repository import DeliveryRepository, SuppressionRepository

#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ"""
sys.path.append(".")



def show_system_status():"""–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç show system status."""
print("=" * 80)print("üöÄ –ü–û–õ–ù–´–ô –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´ - –í–°–ï –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï")print("=" * 80)

    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—èprint("üìã –¢–ï–ö–£–©–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:")print(f"   üîë API –∫–ª—é—á: {settings.resend_api_key[:10]}{'*' * 20}")print(f"   üìß –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {settings.resend_from_email}")print(f"   üë§ –ò–º—è: {settings.resend_from_name}")print(f"   üìä –î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç: {settings.daily_email_limit}")print(f"   ‚ö° –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å: {settings.concurrency}")print(f"   üîÑ –õ–∏–º–∏—Ç –≤ –º–∏–Ω—É—Ç—É: {settings.rate_limit_per_minute}")print(f"   üóÉÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {settings.sqlite_db_path}")

    # –î–Ω–µ–≤–Ω–∞—è –∫–≤–æ—Ç–∞
    quota = DailyQuota()print(f"\nüìÖ –î–ù–ï–í–ù–ê–Ø –ö–í–û–¢–ê:")print(f"   üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è: {quota.used()}")print(f"   üìà –õ–∏–º–∏—Ç: {quota.limit}")print(f"   üìâ –û—Å—Ç–∞—Ç–æ–∫: {quota.remaining()}")print(f"   ‚úÖ –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å: {'–î–∞' if quota.can_send() else '–ù–µ—Ç'}")

    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    conn = get_connection()
    cursor = conn.cursor()

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Üprint(f"\nüóÑÔ∏è –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•:")
cursor.execute("SELECT COUNT(*) FROM deliveries")
    deliveries_count = cursor.fetchone()[0]print(f"   üìß –í—Å–µ–≥–æ –¥–æ—Å—Ç–∞–≤–æ–∫: {deliveries_count}")
cursor.execute("SELECT COUNT(*) FROM deliveries WHERE success = 1")
    success_count = cursor.fetchone()[0]print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {success_count}")
cursor.execute("SELECT COUNT(*) FROM deliveries WHERE success = 0")
    failed_count = cursor.fetchone()[0]print(f"   ‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö: {failed_count}")

    if deliveries_count > 0:
        success_rate = (success_count / deliveries_count) * 100print(f"   üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {success_rate:.1f}%")
cursor.execute("SELECT COUNT(*) FROM unsubscribes")
    unsubscribes_count = cursor.fetchone()[0]print(f"   üö´ –û—Ç–ø–∏—Å–æ–∫: {unsubscribes_count}")
cursor.execute("SELECT COUNT(*) FROM suppressions")
    suppressions_count = cursor.fetchone()[0]print(f"   üîí –í –±–ª–æ–∫-–ª–∏—Å—Ç–µ: {suppressions_count}")
cursor.execute("SELECT COUNT(*) FROM events")
    events_count = cursor.fetchone()[0]print(f"   üéØ –°–æ–±—ã—Ç–∏—è: {events_count}")

    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏print(f"\nüìã –ü–û–°–õ–ï–î–ù–ò–ï –î–û–°–¢–ê–í–ö–ò (—Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ):")cursor.execute("SELECT * FROM deliveries ORDER BY id DESC LIMIT 5")
    recent_deliveries = cursor.fetchall()

    if recent_deliveries:
        for i,delivery in enumerate(recent_deliveries, 1):status = "‚úÖ" if delivery[2] else "‚ùå"provider = delivery[6] or "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"print(f"   {i}. {status} {delivery[1]} | {provider} | {delivery[7]}")
    else:print("   üì≠ –î–æ—Å—Ç–∞–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç")

    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—èprint(f"\nüéØ –ü–û–°–õ–ï–î–ù–ò–ï –°–û–ë–´–¢–ò–Ø:")cursor.execute("SELECT * FROM events ORDER BY id DESC LIMIT 3")
    recent_events = cursor.fetchall()

    if recent_events:
        for i,event in enumerate(recent_events, 1):print(f"   {i}. {event[1]} | {event[2]} | {event[4]}")
    else:print("   üì≠ –°–æ–±—ã—Ç–∏–π –ø–æ–∫–∞ –Ω–µ—Ç")

    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ –¥–Ω—è–ºprint(f"\nüìä –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –ü–û –î–ù–Ø–ú:")cursor.execute("SELECT * FROM daily_usage ORDER BY usage_date DESC LIMIT 5")
    usage_data = cursor.fetchall()

    if usage_data:
        for date, used in usage_data:print(f"   üìÖ {date}: {used} –ø–∏—Å–µ–º")
    else:print("   üì≠ –î–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞ –Ω–µ—Ç")

    conn.close()

    # –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ãprint(f"\nüåê –ü–†–û–í–ê–ô–î–ï–†–´ –û–¢–ü–†–ê–í–ö–ò:")print(f"   üìÆ Resend API: –ê–∫—Ç–∏–≤–µ–Ω")print(f"   üîó Base URL: {settings.resend_base_url}")print(f"   ‚ö° Max retries: {settings.max_retries}")
print("=" * 80)print("üí° –í–°–ï –î–ê–ù–ù–´–ï –í–´–®–ï - –†–ï–ê–õ–¨–ù–´–ï –ò–ó –†–ê–ë–û–ß–ï–ô –°–ò–°–¢–ï–ú–´!")print("=" * 80)


def show_template_preview():"""–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —à–∞–±–ª–æ–Ω–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç show template preview."""
print("\n" + "=" * 60)print("üìÑ –ü–†–ï–î–ü–†–û–°–ú–û–¢–† –®–ê–ë–õ–û–ù–ê –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò")print("=" * 60)

    try:

        engine = TemplateEngine()

        # –†–µ–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_data = {"name": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä","company": "–¢–µ—Å—Ç–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è","discount": "30",
            "current_date": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "message_id": "test_12345",
        }

        # –†–µ–Ω–¥–µ—Ä–∏–º —à–∞–±–ª–æ–Ωrender_result = engine.render("test_template_real.html", test_data)
        html_content = render_result.body_html

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ HTMLprint("üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ HTML (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):")print("-" * 40)print(html_content[:500] + "...")print("-" * 40)
print(f"üìè –ü–æ–ª–Ω–∞—è –¥–ª–∏–Ω–∞: {len(html_content)} —Å–∏–º–≤–æ–ª–æ–≤")print("‚úÖ –®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")

    except Exception as e:print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —à–∞–±–ª–æ–Ω–∞: {e}")

if __name__ == "__main__":
    show_system_status()
    show_template_preview()
