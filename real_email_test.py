from pathlib import Path
import asyncio
import json
import sys

    import traceback
from datetime import datetime

from data_loader.csv_loader import CSVLoader
from mailing.config import settings
from mailing.models import Recipient
from mailing.sender import run_campaign, CampaignController
from persistence.db import get_connection
from resend.client import ResendClient
from templating.engine import TemplateEngine

#!/usr/bin/env python3
"""
–†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê EMAIL - –ù–ï –°–ò–ú–£–õ–Ø–¶–ò–Ø
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –Ω–∞—Å—Ç–æ—è—â—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —á–µ—Ä–µ–∑ Resend API"""
sys.path.append(".")

# –ò–º–ø–æ—Ä—Ç—ã —Å–∏—Å—Ç–µ–º—ã

async def test_real_email_sending():"""–†–ï–ê–õ–¨–ù–ê–Ø –æ—Ç–ø—Ä–∞–≤–∫–∞ email - –±–µ–∑ dry-run —Ä–µ–∂–∏–º–∞"""
    """–¢–µ—Å—Ç –¥–ª—è real email sending."""
print("üöÄ –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê EMAIL - –ë–ï–ó –°–ò–ú–£–õ–Ø–¶–ò–ò")print("=" * 70)print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Resend API!")print("=" * 70)

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞print("1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê API –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
if not settings.resend_api_key or settings.resend_api_key.startswith("test_"):print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù—É–∂–µ–Ω –Ω–∞—Å—Ç–æ—è—â–∏–π API –∫–ª—é—á!")print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á Resend –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é RESEND_API_KEY")print("üîó –ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á: https://resend.com/api-keys")

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èprint("\nüîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á Resend:")api_key = input("API –∫–ª—é—á: ").strip()
if not api_key or api_key.startswith("test_"):print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π API –∫–ª—é—á. –û—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏.")
            return False

    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings.resend_api_key = api_keyprint("‚úÖ API –∫–ª—é—á –æ–±–Ω–æ–≤–ª—ë–Ω")
print(f"   üîë API –∫–ª—é—á: {settings.resend_api_key[:20]}...")

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—èprint(f"\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –î–û–ú–ï–ù–ê –û–¢–ü–†–ê–í–ò–¢–ï–õ–Ø:")print(f"   üìß –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {settings.resend_from_email}")
if "example.com" in settings.resend_from_email:print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω!")print("üí° –í–≤–µ–¥–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π email —Å –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞:")
real_email = input("Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: ").strip()if "@" not in real_email:print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email. –û—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏.")
            return False

    settings.resend_from_email = real_emailprint("‚úÖ Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª—ë–Ω")

    # 3. –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ APIprint(f"\n3Ô∏è‚É£ –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö RESEND API:")

    try:
    client = ResendClient()print("‚úÖ ResendClient —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")print(f"   üåê Base URL: {settings.resend_base_url}")print(f"   üîÑ Max retries: {settings.max_retries}")
    except Exception as e:print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        return False

    # 4. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–πprint(f"\n4Ô∏è‚É£ –ü–û–î–ì–û–¢–û–í–ö–ê –ü–û–õ–£–ß–ê–¢–ï–õ–ï–ô:")

    # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—èprint("üí° –í–≤–µ–¥–∏—Ç–µ email –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏:")test_email = input("Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è: ").strip()
if "@" not in test_email:print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –ø–æ–ª—É—á–∞—Ç–µ–ª—è")
        return False

    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    test_recipient = Recipient(
    email = test_email,name="–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—É—á–∞—Ç–µ–ª—å",
    variables={"email": test_email,"name": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—É—á–∞—Ç–µ–ª—å",
        "company": "Test Company",
        "current_date": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
    },
    )
print(f"   ‚úÖ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {test_recipient.email}")print(f"   üë§ –ò–º—è: {test_recipient.name}")

    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–∞print(f"\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –®–ê–ë–õ–û–ù–ê:")
template_path = Path("samples/template.html")
    if not template_path.exists():print("‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π")
simple_template = """<!DOCTYPE html>
<html>
<head><meta charset="utf-8">
    <title>–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ</title>
</head>
<body>
    <h1>–ü—Ä–∏–≤–µ—Ç, {{name}}!</h1>
    <p>–≠—Ç–æ —Ä–µ–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–∫–∏.</p>
    <p>Email: {{email}}</p>
    <p>–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {{current_date}}</p>
    <hr>
    <p><small>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã.</small></p>
</body></html>"""
template_path.write_text(simple_template, encoding="utf-8")print("‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
    engine = TemplateEngine()
    try:rendered = engine.render("template.html", test_recipient.variables)print(f"   ‚úÖ –®–∞–±–ª–æ–Ω –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")print(f"   üìÑ –¢–µ–º–∞: {rendered.subject}")print(f"   üìè HTML: {len(rendered.body_html)} —Å–∏–º–≤–æ–ª–æ–≤")print(f"   üìù Text: {len(rendered.body_text or '')} —Å–∏–º–≤–æ–ª–æ–≤")
    except Exception as e:print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞: {e}")
        return False

    # 6. –°–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–πprint(f"\n6Ô∏è‚É£ –°–û–°–¢–û–Ø–ù–ò–ï –ë–î –ü–ï–†–ï–î –û–¢–ü–†–ê–í–ö–û–ô:")

    with get_connection() as conn:
    cursor = conn.cursor()cursor.execute("SELECT COUNT(*) FROM deliveries")
    deliveries_before = cursor.fetchone()[0]
cursor.execute("SELECT COUNT(*) FROM deliveries WHERE success = 1")
    success_before = cursor.fetchone()[0]
print(f"   üìä –î–æ—Å—Ç–∞–≤–æ–∫ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏: {deliveries_before}")print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏: {success_before}")

    # 7. –§–ò–ù–ê–õ–¨–ù–û–ï –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ïprint(f"\n7Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–û–ï –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï:")print(f"   üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {settings.resend_from_email}")print(f"   üìß –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {test_recipient.email}")print(f"   üéØ –®–∞–±–ª–æ–Ω: template.html")print(f"   ‚ö†Ô∏è  –≠–¢–û –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê!")
confirm = input("\n‚ùì –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É (–≤–≤–µ–¥–∏—Ç–µ '–î–ê'): ").strip()if confirm.upper() not in ["–î–ê",
    "YES", "Y"]:print("‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return False

    # 8. –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–êprint(f"\n8Ô∏è‚É£ –í–´–ü–û–õ–ù–Ø–ï–¢–°–Ø –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê:")print(f"   üöÄ –ó–∞–ø—É—Å–∫ –∫–∞–º–ø–∞–Ω–∏–∏...")

    controller = CampaignController()

    try:
    event_count = 0
    success_count = 0
    error_details = None

    # –ó–∞–ø—É—Å–∫–∞–µ–º –†–ï–ê–õ–¨–ù–£–Æ –∫–∞–º–ø–∞–Ω–∏—é (dry_run=False!)
        async for event in run_campaign(
        recipients=[test_recipient],template_name="template.html",
            subject="–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ - —Ä–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞",
        dry_run = False,  # –≠–¢–û –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê!
        concurrency = 1,
        controller = controller,
    ):
        event_count += 1print(f"   üìä –°–æ–±—ã—Ç–∏–µ {event_count}: {event.get('type')}")
if event.get("type") == "progress":if event.get("success"):
                success_count += 1print(f"   ‚úÖ –£–°–ü–ï–®–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê!")print(f"   üÜî Message ID: {event.get('message_id')}")print(f"   üìß Email: {event.get('email')}")print(f"   üåê –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {event.get('provider', 'unknown')}")
            else:error_details = event.get("error", "unknown error")print(f"   ‚ùå –û–®–ò–ë–ö–ê –û–¢–ü–†–ê–í–ö–ò: {error_details}")
elif event.get("type") == "finished":print(f"   üèÅ –ö–∞–º–ø–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            break
print(f"\n   üìà –ò–¢–û–ì–ò –û–¢–ü–†–ê–í–ö–ò:")print(f"   üìä –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {event_count}")print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {success_count}")
    print(f"   ‚ùå –û—à–∏–±–æ–∫: {event_count - success_count - 1}"
    )  # -1 –¥–ª—è —Å–æ–±—ã—Ç–∏—è finished

        if error_details:print(f"   üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_details}")

    except Exception as e:print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ü–†–ò –û–¢–ü–†–ê–í–ö–ï: {e}")
        return False

    # 9. –°–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏print(f"\n9Ô∏è‚É£ –°–û–°–¢–û–Ø–ù–ò–ï –ë–î –ü–û–°–õ–ï –û–¢–ü–†–ê–í–ö–ò:")

    with get_connection() as conn:
    cursor = conn.cursor()cursor.execute("SELECT COUNT(*) FROM deliveries")
    deliveries_after = cursor.fetchone()[0]
cursor.execute("SELECT COUNT(*) FROM deliveries WHERE success = 1")
    success_after = cursor.fetchone()[0]
print(f"   üìä –î–æ—Å—Ç–∞–≤–æ–∫ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏: {deliveries_after}")print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏: {success_after}")print(f"   üìà –ù–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π: {deliveries_after - deliveries_before}")

        if deliveries_after > deliveries_before:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å
        cursor.execute("""
            SELECT email, success, provider, created_at, message_id, status_code
            FROM deliveries
            ORDER BY id DESC
            LIMIT 1"""
        )
        last_delivery = cursor.fetchone()

            if last_delivery:status = "‚úÖ –£–°–ü–ï–•" if last_delivery[1] else "‚ùå –û–®–ò–ë–ö–ê"print(f"\n   üìÆ –ü–û–°–õ–ï–î–ù–Ø–Ø –î–û–°–¢–ê–í–ö–ê: {status}")print(f"      üìß Email: {last_delivery[0]}")print(f"      üåê –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {last_delivery[2]}")print(f"      üïí –í—Ä–µ–º—è: {last_delivery[3]}")print(f"      üÜî Message ID: {last_delivery[4]}")print(f"      üìä Status Code: {last_delivery[5]}")

    # 10. –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Åprint(f"\nüéØ –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–° –†–ï–ê–õ–¨–ù–û–ô –û–¢–ü–†–ê–í–ö–ò:")

    if success_count > 0:print(f"   üéâ –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê –í–´–ü–û–õ–ù–ï–ù–ê –£–°–ü–ï–®–ù–û!")print(f"   üìß –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞: {test_recipient.email}")print(f"   üìä –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É")print(f"   ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–∞—Å—Ç–æ—è—â–∏–º–∏ email!")

        return True
    else:print(f"   ‚ùå –û–¢–ü–†–ê–í–ö–ê –ù–ï –£–î–ê–õ–ê–°–¨")print(f"   üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ –¥–æ–º–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è")print(f"   üìä –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –±–∞–∑—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")

        return False

if __name__ == "__main__":print("üî• –í–ù–ò–ú–ê–ù–ò–ï: –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê EMAIL")print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ Resend API!")print("=" * 60)

    try:
    success = asyncio.run(test_real_email_sending())

        if success:print(f"\nüèÜ –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")print(f"üìß Email –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—é")print(f"üìä –í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–∏—Å—Ç–µ–º–µ - —Ä–µ–∞–ª—å–Ω—ã–µ")
    else:print(f"\nüí• –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê –ù–ï –£–î–ê–õ–ê–°–¨")print(f"üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")

    except KeyboardInterrupt:print(f"\n‚èπÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:print(f"\nüí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")

    traceback.print_exc()
