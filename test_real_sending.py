#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ email (–Ω–µ dry-run)
"""
import sys
import asyncio
from pathlib import Path
from datetime import datetime

from mailing.config import Settings
from mailing.models import Recipient
from mailing.sender import run_campaign, CampaignController
from templating.engine import TemplateEngine

sys.path.append(".")

# –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
settings = Settings()


async def test_real_sending():
    """–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ email (–û–°–¢–û–†–û–ñ–ù–û!)"""
    print("üö® –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–û–ô –û–¢–ü–†–ê–í–ö–ò EMAIL")
    print("=" * 70)
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –†–ï–ê–õ–¨–ù–´–ï email!")
    print("‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π!")
    print("=" * 70)

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
    if not settings.resend_api_key:
        print("‚ùå RESEND_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False
    
    print(f"   üîë API –∫–ª—é—á: {settings.resend_api_key[:15]}...")
    print(f"   üìß –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {settings.resend_from_email}")
    print(f"   üë§ –ò–º—è: {settings.resend_from_name}")

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–∞
    print(f"\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –®–ê–ë–õ–û–ù–ê:")
    template_path = Path("samples/test_template.html")
    if not template_path.exists():
        print("‚ùå –§–∞–π–ª samples/test_template.html –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

    engine = TemplateEngine()

    # 3. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    print(f"\n3Ô∏è‚É£ –ü–û–î–ì–û–¢–û–í–ö–ê –¢–ï–°–¢–û–í–û–ì–û –ü–û–õ–£–ß–ê–¢–ï–õ–Ø:")
    
    # –í–ù–ò–ú–ê–ù–ò–ï: –∏–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π email –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_email = "your-test-email@example.com"  # –ò–ó–ú–ï–ù–ò–¢–ï –≠–¢–û!
    
    if test_email == "your-test-email@example.com":
        print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–∑–º–µ–Ω–∏—Ç–µ test_email –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å –≤ –∫–æ–¥–µ")
        return False
    
    test_recipient = Recipient(
        email=test_email,
        name="Test User",
        company="Test Company"
    )
    
    print(f"   üìß –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—É—á–∞—Ç–µ–ª—å: {test_recipient.email}")
    print(f"   üë§ –ò–º—è: {test_recipient.name}")

    # 4. –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —à–∞–±–ª–æ–Ω–∞
    print(f"\n4Ô∏è‚É£ –†–ï–ù–î–ï–†–ò–ù–ì –®–ê–ë–õ–û–ù–ê:")
    
    template_vars = {
        **test_recipient.variables,
        "email": test_recipient.email,
        "current_date": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "subject": "–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç Mailing System",
    }

    try:
        rendered = engine.render("test_template.html", template_vars)
        print(f"   ‚úÖ –®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        print(f"   üìÑ –¢–µ–º–∞: {rendered.subject}")
        print(f"   üìè –†–∞–∑–º–µ—Ä HTML: {len(rendered.body_html)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ HTML
        print(f"   üëÄ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä HTML (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤):")
        print(f"      {rendered.body_html[:200]}...")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞: {e}")
        return False

    # 5. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    print(f"\n5Ô∏è‚É£ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –û–¢–ü–†–ê–í–ö–ò:")
    print(f"   üìß Email –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞: {test_recipient.email}")
    print(f"   üìÑ –¢–µ–º–∞: {rendered.subject}")
    
    confirm = input("   ‚ùì –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É? (yes/no): ").strip().lower()
    if confirm not in ['yes', 'y', '–¥–∞']:
        print("   ‚èπÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return False

    # 6. –†–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
    print(f"\n6Ô∏è‚É£ –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê:")
    
    controller = CampaignController()
    
    try:
        events_count = 0
        success_count = 0
        
        async for event in run_campaign(
            recipients=[test_recipient],
            template_name="test_template.html",
            subject=template_vars.get("subject", "Test Subject"),
            dry_run=False,  # –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê!
            concurrency=1,
            controller=controller,
        ):
            events_count += 1
            
            if event.get("type") == "progress":
                result = event.get("result")
                if result:
                    if result.success:
                        success_count += 1
                        print(f"   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {result.email} (ID: {result.message_id})")
                    else:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞: {result.email} - {result.error}")
                        
            elif event.get("type") == "finished":
                print(f"   üèÅ –ö–∞–º–ø–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                stats = event.get("stats", {})
                print(f"   üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
                break
                
            elif event.get("type") == "error":
                print(f"   üí• –û—à–∏–±–∫–∞ –∫–∞–º–ø–∞–Ω–∏–∏: {event.get('error')}")
                break
        
        print(f"\nüìà –ò–¢–û–ì–ò:")
        print(f"   üìß –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {events_count}")
        print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫: {success_count}")
        
        if success_count > 0:
            print(f"   üéâ Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
        else:
            print(f"   üòû –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        return False

    print(f"\nüéØ –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–û–ô –û–¢–ü–†–ê–í–ö–ò –ó–ê–í–ï–†–®–ï–ù!")
    return True


if __name__ == "__main__":
    asyncio.run(test_real_sending())