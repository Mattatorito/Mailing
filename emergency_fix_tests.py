#!/usr/bin/env python3
"""
–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—Å—Ç—É–ø–æ–≤ –≤ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–∞—Ö
"""

import os
from pathlib import Path


def fix_test_indentation(file_path: Path) -> bool:
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏ –≤ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–∞—Ö"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            lines = f.readlines()
        
        fixed_lines = []
        need_fix = False
        
        for i, line in enumerate(lines):
            # –ï—Å–ª–∏ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –æ—Ç—Å—Ç—É–ø–∞ - —ç—Ç–æ –æ—à–∏–±–∫–∞
            if i == 0 and line.startswith('    '):
                # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø —É –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫
                fixed_lines = []
                for l in lines:
                    if l.startswith('    '):
                        fixed_lines.append(l[4:])  # –£–±–∏—Ä–∞–µ–º 4 –ø—Ä–æ–±–µ–ª–∞
                    else:
                        fixed_lines.append(l)
                need_fix = True
                break
            else:
                fixed_lines.append(line)
        
        if need_fix:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.writelines(fixed_lines)
            return True
        
        return False
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ {file_path}: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    project_root = Path("/Users/alexandr/Desktop/Projects/Scripts/Mailing")
    test_dir = project_root / "tests"
    
    print("üîß –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—Å—Ç—É–ø–æ–≤ –≤ —Ç–µ—Å—Ç–∞—Ö...")
    
    fixed_count = 0
    
    for test_file in test_dir.glob("*.py"):
        if fix_test_indentation(test_file):
            print(f"‚úÖ {test_file.name}: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—Ç—Å—Ç—É–ø—ã")
            fixed_count += 1
    
    print(f"\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {fixed_count}")


if __name__ == "__main__":
    main()