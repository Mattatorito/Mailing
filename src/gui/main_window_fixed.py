from __future__ import annotations
import sys
import asyncio
from pathlib import Path

from PySide6.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QHBoxLayout, QWidget, QPushButton, QLabel, QTextEdit, QFileDialog, QMessageBox, QProgressBar
from PySide6.QtCore import Qt, QThread, pyqtSignal
from PySide6.QtGui import QFont, QPalette, QColor
from qasync import QEventLoop

from .theme import ThemeManager
from . import styles

class MainWindow(QMainWindow):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Email Marketing Tool."""
    
    def __init__(self, theme_manager):
        super().__init__()
        self.theme_manager = theme_manager
        self.setup_ui()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞."""
        self.setWindowTitle("üìß Professional Email Marketing Tool")
        self.setMinimumSize(1000, 700)
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout = QVBoxLayout(central_widget)
        main_layout.setSpacing(20)
        main_layout.setContentsMargins(30, 30, 30, 30)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.create_header(main_layout)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
        self.create_content(main_layout)
        
        # –°—Ç–∞—Ç—É—Å –±–∞—Ä
        self.create_status_bar(main_layout)
        
    def create_header(self, layout):
        """–°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        header_layout = QHBoxLayout()
        
        title = QLabel("üìß Professional Email Marketing Tool")
        title.setAlignment(Qt.AlignCenter)
        title.setStyleSheet("""
            QLabel {
                font-size: 28px;
                font-weight: bold;
                color: #2c3e50;
                padding: 20px;
                background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                    stop:0 #3498db, stop:1 #2980b9);
                color: white;
                border-radius: 15px;
                margin-bottom: 10px;
            }
        """)
        
        header_layout.addWidget(title)
        layout.addLayout(header_layout)
        
    def create_content(self, layout):
        """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç."""
        content_layout = QHBoxLayout()
        
        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        left_panel = self.create_control_panel()
        content_layout.addWidget(left_panel, 1)
        
        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        right_panel = self.create_preview_panel()
        content_layout.addWidget(right_panel, 2)
        
        layout.addLayout(content_layout)
        
    def create_control_panel(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""
        panel = QWidget()
        panel.setStyleSheet("""
            QWidget {
                background-color: #ecf0f1;
                border-radius: 10px;
                padding: 15px;
            }
        """)
        
        layout = QVBoxLayout(panel)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∞–Ω–µ–ª–∏
        panel_title = QLabel("üéØ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–µ–π")
        panel_title.setStyleSheet("font-size: 18px; font-weight: bold; color: #34495e; margin-bottom: 15px;")
        layout.addWidget(panel_title)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.load_recipients_btn = QPushButton("üìã –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π")
        self.load_recipients_btn.clicked.connect(self.load_recipients)
        self.style_button(self.load_recipients_btn, "#3498db")
        layout.addWidget(self.load_recipients_btn)
        
        self.load_template_btn = QPushButton("üé® –í—ã–±—Ä–∞—Ç—å —à–∞–±–ª–æ–Ω")
        self.load_template_btn.clicked.connect(self.load_template)
        self.style_button(self.load_template_btn, "#9b59b6")
        layout.addWidget(self.load_template_btn)
        
        self.preview_btn = QPushButton("üëÄ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä")
        self.preview_btn.clicked.connect(self.preview_email)
        self.style_button(self.preview_btn, "#f39c12")
        layout.addWidget(self.preview_btn)
        
        self.send_btn = QPushButton("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É")
        self.send_btn.clicked.connect(self.start_campaign)
        self.style_button(self.send_btn, "#27ae60")
        layout.addWidget(self.send_btn)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        self.progress_bar = QProgressBar()
        self.progress_bar.setVisible(False)
        self.progress_bar.setStyleSheet("""
            QProgressBar {
                border: 2px solid #bdc3c7;
                border-radius: 5px;
                text-align: center;
                font-weight: bold;
            }
            QProgressBar::chunk {
                background-color: #27ae60;
                border-radius: 3px;
            }
        """)
        layout.addWidget(self.progress_bar)
        
        layout.addStretch()
        return panel
        
    def create_preview_panel(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞."""
        panel = QWidget()
        panel.setStyleSheet("""
            QWidget {
                background-color: #ffffff;
                border: 1px solid #bdc3c7;
                border-radius: 10px;
                padding: 15px;
            }
        """)
        
        layout = QVBoxLayout(panel)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∞–Ω–µ–ª–∏
        panel_title = QLabel("üìß –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä")
        panel_title.setStyleSheet("font-size: 18px; font-weight: bold; color: #34495e; margin-bottom: 15px;")
        layout.addWidget(panel_title)
        
        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        self.preview_text = QTextEdit()
        self.preview_text.setPlaceholderText("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–µ–≥–æ email...")
        self.preview_text.setStyleSheet("""
            QTextEdit {
                border: 1px solid #bdc3c7;
                border-radius: 5px;
                padding: 10px;
                font-family: 'Arial', sans-serif;
                font-size: 12px;
                background-color: #fafafa;
            }
        """)
        layout.addWidget(self.preview_text)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats_title = QLabel("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        stats_title.setStyleSheet("font-size: 16px; font-weight: bold; color: #34495e; margin-top: 15px;")
        layout.addWidget(stats_title)
        
        self.stats_text = QLabel("–ü–æ–ª—É—á–∞—Ç–µ–ª–∏: 0\n–®–∞–±–ª–æ–Ω: –Ω–µ –≤—ã–±—Ä–∞–Ω\n–°—Ç–∞—Ç—É—Å: –≥–æ—Ç–æ–≤ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ")
        self.stats_text.setStyleSheet("""
            QLabel {
                background-color: #ecf0f1;
                border-radius: 5px;
                padding: 10px;
                font-family: 'Consolas', 'Monaco', monospace;
                font-size: 11px;
                color: #2c3e50;
            }
        """)
        layout.addWidget(self.stats_text)
        
        return panel
        
    def create_status_bar(self, layout):
        """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –±–∞—Ä."""
        status_layout = QHBoxLayout()
        
        self.status_label = QLabel("‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        self.status_label.setStyleSheet("""
            QLabel {
                background-color: #2ecc71;
                color: white;
                padding: 8px 15px;
                border-radius: 5px;
                font-weight: bold;
            }
        """)
        
        status_layout.addWidget(self.status_label)
        status_layout.addStretch()
        
        version_label = QLabel("v2.0.0 Enhanced Edition")
        version_label.setStyleSheet("color: #7f8c8d; font-size: 10px;")
        status_layout.addWidget(version_label)
        
        layout.addLayout(status_layout)
        
    def style_button(self, button, color):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∏–ª—å –∫ –∫–Ω–æ–ø–∫–µ."""
        button.setStyleSheet(f"""
            QPushButton {{
                background-color: {color};
                color: white;
                border: none;
                padding: 12px 20px;
                font-size: 14px;
                font-weight: bold;
                border-radius: 8px;
                margin: 5px 0;
            }}
            QPushButton:hover {{
                background-color: {self.darken_color(color)};
                transform: translateY(-1px);
            }}
            QPushButton:pressed {{
                background-color: {self.darken_color(color, 0.8)};
            }}
        """)
        
    def darken_color(self, color, factor=0.9):
        """–ó–∞—Ç–µ–º–Ω—è–µ—Ç —Ü–≤–µ—Ç."""
        if color == "#3498db":
            return "#2980b9" if factor == 0.9 else "#1f5f8b"
        elif color == "#9b59b6":
            return "#8e44ad" if factor == 0.9 else "#6c3483"
        elif color == "#f39c12":
            return "#e67e22" if factor == 0.9 else "#d35400"
        elif color == "#27ae60":
            return "#229954" if factor == 0.9 else "#1e8449"
        return color
        
    def load_recipients(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π."""
        file_path, _ = QFileDialog.getOpenFileName(
            self, 
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏",
            "",
            "CSV —Ñ–∞–π–ª—ã (*.csv);;Excel —Ñ–∞–π–ª—ã (*.xlsx);;–í—Å–µ —Ñ–∞–π–ª—ã (*)"
        )
        
        if file_path:
            self.status_label.setText(f"üìã –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: {Path(file_path).name}")
            self.update_stats("recipients", Path(file_path).name)
            
    def load_template(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —à–∞–±–ª–æ–Ω email."""
        file_path, _ = QFileDialog.getOpenFileName(
            self,
            "–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω email",
            "",
            "HTML —Ñ–∞–π–ª—ã (*.html);;–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã (*.txt);;–í—Å–µ —Ñ–∞–π–ª—ã (*)"
        )
        
        if file_path:
            try:
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                self.preview_text.setHtml(content if file_path.endswith('.html') else f"<pre>{content}</pre>")
                self.status_label.setText(f"üé® –ó–∞–≥—Ä—É–∂–µ–Ω —à–∞–±–ª–æ–Ω: {Path(file_path).name}")
                self.update_stats("template", Path(file_path).name)
            except Exception as e:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —à–∞–±–ª–æ–Ω: {e}")
                
    def preview_email(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä."""
        if self.preview_text.toPlainText():
            QMessageBox.information(
                self, 
                "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä", 
                "Email –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ!\n\nüìß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –ø–∞–Ω–µ–ª–∏ —Å–ø—Ä–∞–≤–∞."
            )
            self.status_label.setText("üëÄ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –≥–æ—Ç–æ–≤")
        else:
            QMessageBox.warning(self, "–í–Ω–∏–º–∞–Ω–∏–µ", "–°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —à–∞–±–ª–æ–Ω email!")
            
    def start_campaign(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–∞–º–ø–∞–Ω–∏—é —Ä–∞—Å—Å—ã–ª–∫–∏."""
        reply = QMessageBox.question(
            self,
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
            "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É?\n\n–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ.",
            QMessageBox.Yes | QMessageBox.No
        )
        
        if reply == QMessageBox.Yes:
            self.progress_bar.setVisible(True)
            self.progress_bar.setValue(0)
            self.status_label.setText("üöÄ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞...")
            
            # –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            for i in range(101):
                self.progress_bar.setValue(i)
                QApplication.processEvents()
                
            self.status_label.setText("‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            self.progress_bar.setVisible(False)
            
            QMessageBox.information(
                self,
                "–£—Å–ø–µ—Ö",
                "üéâ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\nüìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ –æ—Ç—á–µ—Ç–∞—Ö."
            )
            
    def update_stats(self, stat_type, value):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É."""
        current_text = self.stats_text.text()
        lines = current_text.split('\n')
        
        if stat_type == "recipients":
            lines[0] = f"–ü–æ–ª—É—á–∞—Ç–µ–ª–∏: {value}"
        elif stat_type == "template":
            lines[1] = f"–®–∞–±–ª–æ–Ω: {value}"
            
        lines[2] = "–°—Ç–∞—Ç—É—Å: –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ"
        self.stats_text.setText('\n'.join(lines))