import asyncio
import os
import sys

        import traceback
        import traceback
from datetime import datetime

from mailing.models import Recipient
from mailing.sender import run_campaign, CampaignController
from persistence.db import get_connection

#!/usr/bin/env python3
"""
–¢–ï–°–¢ –° ONBOARDING –î–û–ú–ï–ù–û–ú RESEND"""
sys.path.append(".")


# –ò—Å–ø–æ–ª—å–∑—É–µ–º onboarding –¥–æ–º–µ–Ω Resendos.environ["RESEND_API_KEY"] = "re_NY3yzMqH_JaMDnBSGZdi3qZ32rDmMdq7W"os.environ["RESEND_FROM_EMAIL"] = "onboarding@resend.dev"os.environ["RESEND_FROM_NAME"] = "Email Marketing System Test"



async def onboarding_email_test():"""–¢–µ—Å—Ç —Å onboarding –¥–æ–º–µ–Ω–æ–º Resend"""
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç onboarding email test."""
print("üöÄ –¢–ï–°–¢ –° ONBOARDING –î–û–ú–ï–ù–û–ú RESEND")print("=" * 60)print("üìß –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: onboarding@resend.dev")print("üéØ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: alexandr@mailink.space")print("=" * 60)

    # 1. –°–æ–∑–¥–∞—ë–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    test_recipient = Recipient(email="alexandr@mailink.space",name="–ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
        variables={"email": "alexandr@mailink.space","name": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
            "subject": "–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–∫–∏ - —Ä–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞",
            "company": "Email Marketing System",
            "current_date": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "test_message": "–≠—Ç–æ —Ä–µ–∞–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –∏–∑ —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–∫–∏!",
        },
    )
print(f"‚úÖ –ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {test_recipient.email}")

    # 2. –°–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏
    with get_connection() as conn:
        cursor = conn.cursor()cursor.execute("SELECT COUNT(*) FROM deliveries WHERE success = 1")
        success_before = cursor.fetchone()[0]cursor.execute("SELECT COUNT(*) FROM deliveries")
        total_before = cursor.fetchone()[0]
print(f"üìä –î–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ - –í—Å–µ–≥–æ: {total_before}, –£—Å–ø–µ—à–Ω—ã—Ö: {success_before}")

    # 3. –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–êprint(f"\nüöÄ –í–´–ü–û–õ–ù–Ø–ï–¢–°–Ø –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê...")print(f"‚ö†Ô∏è  –≠—Ç–æ –Ω–µ —Å–∏–º—É–ª—è—Ü–∏—è - –Ω–∞—Å—Ç–æ—è—â–∏–π email!")

    controller = CampaignController()
    success_count = 0
    message_id = None
    error_details = None

    try:
        async for event in run_campaign(
            recipients=[test_recipient],template_name="template.html",
                subject="–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–∫–∏ - —Ä–µ–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞",
            dry_run = False,  # –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê!
            concurrency = 1,
            controller = controller,
        ):event_type = event.get("type")print(f"üìä –°–æ–±—ã—Ç–∏–µ: {event_type}")
if event_type == "progress":if event.get("success"):
                    success_count += 1message_id = event.get("message_id")provider = event.get("provider")print(f"‚úÖ –£–°–ü–ï–®–ù–ê–Ø –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê!")print(f"   üÜî Message ID: {message_id}")print(f"   üåê –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {provider}")print(f"   üìß Email: {event.get('email')}")
                else:error_details = event.get("error")print(f"‚ùå –û–®–ò–ë–ö–ê –û–¢–ü–†–ê–í–ö–ò: {error_details}")
elif event_type == "finished":total_sent = event.get("total_sent",
    0)total_failed = event.get("total_failed", 0)print(f"üèÅ –ö–ê–ú–ü–ê–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")print(f"   üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {total_sent}")print(f"   ‚ùå –û—à–∏–±–æ–∫: {total_failed}")
                break

    except Exception as e:print(f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")

        traceback.print_exc()
        return False

    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ë–îprint(f"\nüìä –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê –í –ë–ê–ó–ï –î–ê–ù–ù–´–•:")

    with get_connection() as conn:
        cursor = conn.cursor()
cursor.execute("SELECT COUNT(*) FROM deliveries WHERE success = 1")
        success_after = cursor.fetchone()[0]cursor.execute("SELECT COUNT(*) FROM deliveries")
        total_after = cursor.fetchone()[0]
print(f"üìà –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ - –í—Å–µ–≥–æ: {total_after}, –£—Å–ø–µ—à–Ω—ã—Ö: {success_after}")print(f"üìä –ù–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π: {total_after - total_before}")print(f"‚úÖ –ù–æ–≤—ã—Ö —É—Å–ø–µ—à–Ω—ã—Ö: {success_after - success_before}")

        # –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å
        cursor.execute("""
            SELECT email, success, provider, created_at, message_id, status_code, error
            FROM deliveries
            ORDER BY id DESC
            LIMIT 1"""
        )
        last = cursor.fetchone()

        if last:status_icon = "‚úÖ" if last[1] else "‚ùå"print(f"\nüìÆ –ü–û–°–õ–ï–î–ù–Ø–Ø –ó–ê–ü–ò–°–¨: {status_icon}")print(f"   üìß Email: {last[0]}")print(f"   üåê –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {last[2]}")print(f"   üïí –í—Ä–µ–º—è: {last[3]}")print(f"   üÜî Message ID: {last[4]}")print(f"   üìä Status Code: {last[5]}")
            if last[6]:  # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞print(f"   ‚ùå –û—à–∏–±–∫–∞: {last[6]}")

    # 5. –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–óprint(f"\nüéØ –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó –†–ï–ê–õ–¨–ù–û–ô –û–¢–ü–†–ê–í–ö–ò:")

    if success_count > 0 and message_id:print(f"üéâ –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê –í–´–ü–û–õ–ù–ï–ù–ê –£–°–ü–ï–®–ù–û!")print(f"üìß Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Resend API")print(f"üÜî Message ID: {message_id}")print(f"üìä –ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!")print(f"üåê –ú–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å email –≤ –ø–∞–ø–∫–µ –≤—Ö–æ–¥—è—â–∏—Ö")

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        with get_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT COUNT(*) FROM deliveries WHERE provider = 'resend' AND success = 1"
            )
            resend_success = cursor.fetchone()[0]
cursor.execute("SELECT COUNT(*) FROM deliveries WHERE success = 1")
            total_success = cursor.fetchone()[0]

            if total_success > 0:
                success_rate = (resend_success / total_success) * 100
            else:
                success_rate = 0
print(f"\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê RESEND:")print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫: {resend_success}")print(f"   üìä –û–±—â–∏–π —É—Å–ø–µ—Ö —Å–∏—Å—Ç–µ–º—ã: {success_rate:.1f}%")

        return True
    else:print(f"‚ùå –†–ï–ê–õ–¨–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê –ù–ï –£–î–ê–õ–ê–°–¨")
        if error_details:print(f"üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_details}")print(f"üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∏ –¥–æ–º–µ–Ω–∞")
        return False

if __name__ == "__main__":print("üî• –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê –†–ï–ê–õ–¨–ù–û–ô –û–¢–ü–†–ê–í–ö–ò")print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è onboarding –¥–æ–º–µ–Ω Resend –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")print("=" * 60)

    try:
        result = asyncio.run(onboarding_email_test())

        if result:print(f"\nüèÜ –ü–û–õ–ù–´–ô –£–°–ü–ï–•!")print(f"üìß –°–∏—Å—Ç–µ–º–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞ —Ä–µ–∞–ª—å–Ω—ã–π email")print(f"üìä –í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ - —Ä–µ–∞–ª—å–Ω—ã–µ")print(f"‚úÖ –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–µ–Ω!")
        else:print(f"\n‚ö†Ô∏è  –¢–†–ï–ë–£–ï–¢–°–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê")print(f"üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")

    except KeyboardInterrupt:print(f"\n‚èπÔ∏è –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:print(f"\nüí• –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê: {e}")

        traceback.print_exc()
